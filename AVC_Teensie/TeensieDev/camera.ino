///////////////////////////////////////////////////////////////////////////////
// camera - Functions associated with controlling the camera.  
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Local header files
///////////////////////////////////////////////////////////////////////////////
#include "telemetry.h"
#include "camera.h"
#include <Servo.h>

///////////////////////////////////////////////////////////////////////////////
// extern global variables - defined in the main file
///////////////////////////////////////////////////////////////////////////////
extern Telemetry telem;                // The telemetry class

///////////////////////////////////////////////////////////////////////////////
// Constants
///////////////////////////////////////////////////////////////////////////////
#define CAM_PIN_NUMBER        39
#define CAM_CONVERSION       -15    // Convert from angle to microseconds
#define CAM_MID_PULSEWIDTH  1500    // Servo neutral position
#define CAM_MIN_PULSWIDTH   1000
#define CAM_MAX_PULSEWIDTH  2000

///////////////////////////////////////////////////////////////////////////////
// local global variables
///////////////////////////////////////////////////////////////////////////////
Servo  camera;
int16  camAngle;

///////////////////////////////////////////////////////////////////////////////
// cam_init - initialize the heartbeat system
///////////////////////////////////////////////////////////////////////////////
void cam_init ()
{
    camera.attach(CAM_PIN_NUMBER, CAM_MIN_PULSWIDTH, CAM_MAX_PULSEWIDTH);
    cam_setAngle (0);
    camAngle = 0;
}

///////////////////////////////////////////////////////////////////////////////
// cam_setAngle - sets the camera angle
///////////////////////////////////////////////////////////////////////////////
uint32_t cam_setAngle (int16_t angle)
{
    if (angle > 90 || angle < -90)
    {
        return (false);             //  beyond limits of camera servo
    }
    
    // Convert from angle to Servo microseconds 
    int32_t uSeconds = CAM_MID_PULSEWIDTH + (angle * CAM_CONVERSION); 
    camera.writeMicroseconds(uSeconds);  
    
    camAngle = angle;
    return (true);
}

///////////////////////////////////////////////////////////////////////////////
// cam_getAngle - gets the current camera angle and places it into telemetry
///////////////////////////////////////////////////////////////////////////////
void cam_getAngle (uint32_t currTime)
{
    telem.cameraAngle = camAngle;
}
