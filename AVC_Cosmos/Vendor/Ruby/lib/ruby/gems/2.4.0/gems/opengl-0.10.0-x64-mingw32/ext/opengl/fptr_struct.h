    #ifndef _FPTR_STRUCT_H_
    #define _FPTR_STRUCT_H_
    struct glfunc_ptrs {
GLvoid (APIENTRY * glAccum)(GLenum,GLfloat);
GLvoid (APIENTRY * glAlphaFunc)(GLenum,GLclampf);
GLvoid (APIENTRY * glArrayElement)(GLint);
GLvoid (APIENTRY * glBindTexture)(GLenum,GLuint);
GLvoid (APIENTRY * glBlendFunc)(GLenum,GLenum);
GLvoid (APIENTRY * glCallList)(GLuint);
GLvoid (APIENTRY * glClear)(GLbitfield);
GLvoid (APIENTRY * glClearAccum)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glClearColor)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glClearDepth)(GLclampd);
GLvoid (APIENTRY * glClearIndex)(GLfloat);
GLvoid (APIENTRY * glClearStencil)(GLint);
GLvoid (APIENTRY * glColor3b)(GLbyte,GLbyte,GLbyte);
GLvoid (APIENTRY * glColor3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glColor3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glColor3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glColor3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glColor3ub)(GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glColor3ui)(GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glColor3us)(GLushort,GLushort,GLushort);
GLvoid (APIENTRY * glColor4b)(GLbyte,GLbyte,GLbyte,GLbyte);
GLvoid (APIENTRY * glColor4d)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glColor4f)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glColor4i)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glColor4s)(GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glColor4ub)(GLubyte,GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glColor4ui)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glColor4us)(GLushort,GLushort,GLushort,GLushort);
GLvoid (APIENTRY * glColorMask)(GLboolean,GLboolean,GLboolean,GLboolean);
GLvoid (APIENTRY * glColorMaterial)(GLenum,GLenum);
GLvoid (APIENTRY * glCopyPixels)(GLint,GLint,GLsizei,GLsizei,GLenum);
GLvoid (APIENTRY * glCopyTexImage1D)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint);
GLvoid (APIENTRY * glCopyTexImage2D)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint);
GLvoid (APIENTRY * glCopyTexSubImage1D)(GLenum,GLint,GLint,GLint,GLint,GLsizei);
GLvoid (APIENTRY * glCopyTexSubImage2D)(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
GLvoid (APIENTRY * glCullFace)(GLenum);
GLvoid (APIENTRY * glDeleteLists)(GLuint,GLuint);
GLvoid (APIENTRY * glDepthFunc)(GLenum);
GLvoid (APIENTRY * glDepthMask)(GLboolean);
GLvoid (APIENTRY * glDepthRange)(GLclampd,GLclampd);
GLvoid (APIENTRY * glDrawArrays)(GLenum,GLint,GLsizei);
GLvoid (APIENTRY * glDrawBuffer)(GLenum);
GLvoid (APIENTRY * glEdgeFlag)(GLboolean);
GLvoid (APIENTRY * glEvalCoord1d)(GLdouble);
GLvoid (APIENTRY * glEvalCoord1f)(GLfloat);
GLvoid (APIENTRY * glEvalCoord2d)(GLdouble,GLdouble);
GLvoid (APIENTRY * glEvalCoord2f)(GLfloat,GLfloat);
GLvoid (APIENTRY * glEvalMesh1)(GLenum,GLint,GLint);
GLvoid (APIENTRY * glEvalMesh2)(GLenum,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glEvalPoint1)(GLint);
GLvoid (APIENTRY * glEvalPoint2)(GLint,GLint);
GLvoid (APIENTRY * glFinish)(void);
GLvoid (APIENTRY * glFlush)(void);
GLvoid (APIENTRY * glFogi)(GLenum,GLint);
GLvoid (APIENTRY * glFogf)(GLenum,GLfloat);
GLvoid (APIENTRY * glFrontFace)(GLenum);
GLvoid (APIENTRY * glFrustum)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
GLuint (APIENTRY * glGenLists)(GLsizei);
GLenum (APIENTRY * glGetError)(void);
GLvoid (APIENTRY * glHint)(GLenum,GLenum);
GLvoid (APIENTRY * glIndexd)(GLdouble);
GLvoid (APIENTRY * glIndexf)(GLfloat);
GLvoid (APIENTRY * glIndexi)(GLint);
GLvoid (APIENTRY * glIndexMask)(GLuint);
GLvoid (APIENTRY * glIndexs)(GLshort);
GLvoid (APIENTRY * glIndexub)(GLubyte);
GLvoid (APIENTRY * glInitNames)(void);
GLboolean (APIENTRY * glIsEnabled)(GLenum);
GLboolean (APIENTRY * glIsList)(GLuint);
GLboolean (APIENTRY * glIsTexture)(GLuint);
GLvoid (APIENTRY * glLightModelf)(GLenum,GLfloat);
GLvoid (APIENTRY * glLightModeli)(GLenum,GLint);
GLvoid (APIENTRY * glLightf)(GLenum,GLenum,GLfloat);
GLvoid (APIENTRY * glLighti)(GLenum,GLenum,GLint);
GLvoid (APIENTRY * glLineStipple)(GLint,GLushort);
GLvoid (APIENTRY * glLineWidth)(GLfloat);
GLvoid (APIENTRY * glListBase)(GLuint);
GLvoid (APIENTRY * glLoadIdentity)(void);
GLvoid (APIENTRY * glLoadName)(GLuint);
GLvoid (APIENTRY * glLogicOp)(GLenum);
GLvoid (APIENTRY * glMapGrid1d)(GLint,GLdouble,GLdouble);
GLvoid (APIENTRY * glMapGrid1f)(GLint,GLfloat,GLfloat);
GLvoid (APIENTRY * glMapGrid2d)(GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble);
GLvoid (APIENTRY * glMapGrid2f)(GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat);
GLvoid (APIENTRY * glMaterialf)(GLenum,GLenum,GLfloat);
GLvoid (APIENTRY * glMateriali)(GLenum,GLenum,GLint);
GLvoid (APIENTRY * glMatrixMode)(GLenum);
GLvoid (APIENTRY * glNormal3b)(GLbyte,GLbyte,GLbyte);
GLvoid (APIENTRY * glNormal3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glNormal3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glNormal3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glNormal3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glOrtho)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glPassThrough)(GLfloat);
GLvoid (APIENTRY * glPixelStoref)(GLenum,GLfloat);
GLvoid (APIENTRY * glPixelStorei)(GLenum,GLint);
GLvoid (APIENTRY * glPixelTransferf)(GLenum,GLfloat);
GLvoid (APIENTRY * glPixelTransferi)(GLenum,GLint);
GLvoid (APIENTRY * glPixelZoom)(GLfloat,GLfloat);
GLvoid (APIENTRY * glPointSize)(GLfloat);
GLvoid (APIENTRY * glPolygonMode)(GLenum,GLenum);
GLvoid (APIENTRY * glPolygonOffset)(GLfloat,GLfloat);
GLvoid (APIENTRY * glPopAttrib)(void);
GLvoid (APIENTRY * glPopClientAttrib)(void);
GLvoid (APIENTRY * glPopName)(void);
GLvoid (APIENTRY * glPushAttrib)(GLbitfield);
GLvoid (APIENTRY * glPushClientAttrib)(GLbitfield);
GLvoid (APIENTRY * glPushName)(GLuint);
GLvoid (APIENTRY * glRasterPos2d)(GLdouble,GLdouble);
GLvoid (APIENTRY * glRasterPos2f)(GLfloat,GLfloat);
GLvoid (APIENTRY * glRasterPos2i)(GLint,GLint);
GLvoid (APIENTRY * glRasterPos2s)(GLshort,GLshort);
GLvoid (APIENTRY * glRasterPos3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glRasterPos3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glRasterPos3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glRasterPos3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glRasterPos4d)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glRasterPos4f)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glRasterPos4i)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glRasterPos4s)(GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glReadBuffer)(GLenum);
GLvoid (APIENTRY * glRectd)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glRectf)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glRecti)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glRects)(GLshort,GLshort,GLshort,GLshort);
GLint (APIENTRY * glRenderMode)(GLenum);
GLvoid (APIENTRY * glRotated)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glRotatef)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glScaled)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glScalef)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glScissor)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glShadeModel)(GLenum);
GLvoid (APIENTRY * glStencilFunc)(GLenum,GLint,GLuint);
GLvoid (APIENTRY * glStencilMask)(GLuint);
GLvoid (APIENTRY * glStencilOp)(GLenum,GLenum,GLenum);
GLvoid (APIENTRY * glTexCoord1d)(GLdouble);
GLvoid (APIENTRY * glTexCoord1f)(GLfloat);
GLvoid (APIENTRY * glTexCoord1i)(GLint);
GLvoid (APIENTRY * glTexCoord1s)(GLshort);
GLvoid (APIENTRY * glTexCoord2d)(GLdouble,GLdouble);
GLvoid (APIENTRY * glTexCoord2f)(GLfloat,GLfloat);
GLvoid (APIENTRY * glTexCoord2i)(GLint,GLint);
GLvoid (APIENTRY * glTexCoord2s)(GLshort,GLshort);
GLvoid (APIENTRY * glTexCoord3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glTexCoord3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glTexCoord3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glTexCoord3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glTexCoord4d)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glTexCoord4f)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glTexCoord4i)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glTexCoord4s)(GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glTexEnvf)(GLenum,GLenum,GLfloat);
GLvoid (APIENTRY * glTexEnvi)(GLenum,GLenum,GLint);
GLvoid (APIENTRY * glTexGend)(GLenum,GLenum,GLdouble);
GLvoid (APIENTRY * glTexGenf)(GLenum,GLenum,GLfloat);
GLvoid (APIENTRY * glTexGeni)(GLenum,GLenum,GLint);
GLvoid (APIENTRY * glTexParameterf)(GLenum,GLenum,GLfloat);
GLvoid (APIENTRY * glTexParameteri)(GLenum,GLenum,GLint);
GLvoid (APIENTRY * glTranslated)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glTranslatef)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertex2d)(GLdouble,GLdouble);
GLvoid (APIENTRY * glVertex2f)(GLfloat,GLfloat);
GLvoid (APIENTRY * glVertex2i)(GLint,GLint);
GLvoid (APIENTRY * glVertex2s)(GLshort,GLshort);
GLvoid (APIENTRY * glVertex3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertex3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertex3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glVertex3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertex4d)(GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertex4f)(GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertex4i)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertex4s)(GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glViewport)(GLuint,GLuint,GLuint,GLuint);
void (APIENTRY * glEnable)(GLenum cap);
void (APIENTRY * glDisable)(GLenum cap);
void (APIENTRY * glEnableClientState)(GLenum cap);
void (APIENTRY * glDisableClientState)(GLenum cap);
void (APIENTRY * glBegin)(GLenum mode);
void (APIENTRY * glEnd)(void);
void (APIENTRY * glPopMatrix)(void);
void (APIENTRY * glPushMatrix)(void);
void (APIENTRY * glNewList)(GLuint list, GLenum mode);
void (APIENTRY * glEndList)(void);
GLvoid (APIENTRY * glCallLists)(GLsizei n, GLenum type, const GLvoid *lists);
void (APIENTRY * glBitmap)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void (APIENTRY * glEdgeFlagv)(const GLboolean *flag);
void (APIENTRY * glIndexdv)(const GLdouble *c);
void (APIENTRY * glIndexfv)(const GLfloat *c);
void (APIENTRY * glIndexiv)(const GLint *c);
void (APIENTRY * glIndexsv)(const GLshort *c);
void (APIENTRY * glClipPlane)(GLenum plane, const GLdouble *equation);
void (APIENTRY * glFogfv)(GLenum pname, const GLfloat *params);
void (APIENTRY * glFogiv)(GLenum pname, const GLint *params);
void (APIENTRY * glLightfv)(GLenum light, GLenum pname, const GLfloat *params);
void (APIENTRY * glLightiv)(GLenum light, GLenum pname, const GLint *params);
void (APIENTRY * glLightModelfv)(GLenum pname, const GLfloat *params);
void (APIENTRY * glLightModeliv)(GLenum pname, const GLint *params);
void (APIENTRY * glMaterialfv)(GLenum face, GLenum pname, const GLfloat *params);
void (APIENTRY * glMaterialiv)(GLenum face, GLenum pname, const GLint *params);
void (APIENTRY * glPolygonStipple)(const GLubyte *mask);
void (APIENTRY * glTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params);
void (APIENTRY * glTexParameteriv)(GLenum target, GLenum pname, const GLint *params);
void (APIENTRY * glTexImage1D)(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void (APIENTRY * glTexImage2D)(GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void (APIENTRY * glTexEnvfv)(GLenum target, GLenum pname, const GLfloat *params);
void (APIENTRY * glTexEnviv)(GLenum target, GLenum pname, const GLint *params);
void (APIENTRY * glTexGendv)(GLenum coord, GLenum pname, const GLdouble *params);
void (APIENTRY * glTexGenfv)(GLenum coord, GLenum pname, const GLfloat *params);
void (APIENTRY * glTexGeniv)(GLenum coord, GLenum pname, const GLint *params);
void (APIENTRY * glFeedbackBuffer)(GLsizei size, GLenum type, GLfloat *buffer);
void (APIENTRY * glSelectBuffer)(GLsizei size, GLuint *buffer);
void (APIENTRY * glMap1d)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void (APIENTRY * glMap1f)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void (APIENTRY * glMap2d)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void (APIENTRY * glMap2f)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void (APIENTRY * glEvalCoord1dv)(const GLdouble *u);
void (APIENTRY * glEvalCoord1fv)(const GLfloat *u);
void (APIENTRY * glEvalCoord2dv)(const GLdouble *u);
void (APIENTRY * glEvalCoord2fv)(const GLfloat *u);
void (APIENTRY * glPixelMapfv)(GLenum map, GLsizei mapsize, const GLfloat *values);
void (APIENTRY * glPixelMapuiv)(GLenum map, GLsizei mapsize, const GLuint *values);
void (APIENTRY * glPixelMapusv)(GLenum map, GLsizei mapsize, const GLushort *values);
void (APIENTRY * glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
void (APIENTRY * glDrawPixels)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void (APIENTRY * glGetClipPlane)(GLenum plane, GLdouble *equation);
void (APIENTRY * glGetDoublev)(GLenum pname, GLdouble *params);
void (APIENTRY * glGetIntegerv)(GLenum pname, GLint *params);
void (APIENTRY * glGetFloatv)(GLenum pname, GLfloat *params);
void (APIENTRY * glGetBooleanv)(GLenum pname, GLboolean *params);
void (APIENTRY * glGetLightfv)(GLenum light, GLenum pname, GLfloat *params);
void (APIENTRY * glGetLightiv)(GLenum light, GLenum pname, GLint *params);
void (APIENTRY * glGetMapdv)(GLenum target, GLenum query, GLdouble *v);
void (APIENTRY * glGetMapiv)(GLenum target, GLenum query, GLint *v);
void (APIENTRY * glGetMapfv)(GLenum target, GLenum query, GLfloat *v);
void (APIENTRY * glGetMaterialfv)(GLenum face, GLenum pname, GLfloat *params);
void (APIENTRY * glGetMaterialiv)(GLenum face, GLenum pname, GLint *params);
void (APIENTRY * glGetPixelMapfv)(GLenum map, GLfloat *values);
void (APIENTRY * glGetPixelMapuiv)(GLenum map, GLuint *values);
void (APIENTRY * glGetPixelMapusv)(GLenum map, GLushort *values);
void (APIENTRY * glGetPolygonStipple)(GLubyte *mask);
const GLubyte * (APIENTRY * glGetString)(GLenum name);
GLvoid (APIENTRY * glGetTexEnvfv)(GLenum target, GLenum pname, GLfloat *params);
GLvoid (APIENTRY * glGetTexEnviv)(GLenum target, GLenum pname, GLint *params);
GLvoid (APIENTRY * glGetTexGendv)(GLenum coord, GLenum pname, GLdouble *params);
GLvoid (APIENTRY * glGetTexGenfv)(GLenum coord, GLenum pname, GLfloat *params);
GLvoid (APIENTRY * glGetTexGeniv)(GLenum coord, GLenum pname, GLint *params);
void (APIENTRY * glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
void (APIENTRY * glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params);
void (APIENTRY * glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params);
void (APIENTRY * glGetTexParameteriv)(GLenum target, GLenum pname, GLint *params);
void (APIENTRY * glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params);
void (APIENTRY * glLoadMatrixf)(const GLfloat *m);
void (APIENTRY * glLoadMatrixd)(const GLdouble *m);
void (APIENTRY * glMultMatrixf)(const GLfloat *m);
void (APIENTRY * glMultMatrixd)(const GLdouble *m);
GLvoid (APIENTRY * glVertexPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr);
GLvoid (APIENTRY * glColorPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr);
GLvoid (APIENTRY * glTexCoordPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *ptr);
void (APIENTRY * glDrawElements)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
void (APIENTRY * glEdgeFlagPointer)(GLsizei stride, const GLvoid *ptr);
void (APIENTRY * glIndexPointer)(GLenum type, GLsizei stride, const GLvoid *ptr);
void (APIENTRY * glInterleavedArrays)(GLenum format, GLsizei stride, const GLvoid *pointer);
void (APIENTRY * glNormalPointer)(GLenum type, GLsizei stride, const GLvoid *ptr);
void (APIENTRY * glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
void (APIENTRY * glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLboolean (APIENTRY * glAreTexturesResident)(GLsizei n, const GLuint *textures, GLboolean *residences);
GLvoid (APIENTRY * glGenTextures)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteTextures)(GLsizei,const GLuint *);
void (APIENTRY * glPrioritizeTextures)(GLsizei n, const GLuint *textures, const GLclampf *priorities);
void (APIENTRY * glIndexubv)(const GLubyte *c);
GLvoid (APIENTRY * glBlendColor)(GLclampf,GLclampf,GLclampf,GLclampf);
GLvoid (APIENTRY * glBlendEquation)(GLenum);
GLvoid (APIENTRY * glCopyTexSubImage3D)(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
GLvoid (APIENTRY * glDrawRangeElements)(GLenum,GLuint,GLuint,GLsizei,GLenum,GLvoid*);
GLvoid (APIENTRY * glTexImage3D)(GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid*);
GLvoid (APIENTRY * glTexSubImage3D)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const GLvoid*);
GLvoid (APIENTRY * glActiveTexture)(GLenum);
GLvoid (APIENTRY * glClientActiveTexture)(GLenum);
GLvoid (APIENTRY * glMultiTexCoord1d)(GLenum,GLdouble);
GLvoid (APIENTRY * glMultiTexCoord1f)(GLenum,GLfloat);
GLvoid (APIENTRY * glMultiTexCoord1i)(GLenum,GLint);
GLvoid (APIENTRY * glMultiTexCoord1s)(GLenum,GLshort);
GLvoid (APIENTRY * glMultiTexCoord2d)(GLenum,GLdouble,GLdouble);
GLvoid (APIENTRY * glMultiTexCoord2f)(GLenum,GLfloat,GLfloat);
GLvoid (APIENTRY * glMultiTexCoord2i)(GLenum,GLint,GLint);
GLvoid (APIENTRY * glMultiTexCoord2s)(GLenum,GLshort,GLshort);
GLvoid (APIENTRY * glMultiTexCoord3d)(GLenum,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glMultiTexCoord3f)(GLenum,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glMultiTexCoord3i)(GLenum,GLint,GLint,GLint);
GLvoid (APIENTRY * glMultiTexCoord3s)(GLenum,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glMultiTexCoord4d)(GLenum,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glMultiTexCoord4f)(GLenum,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glMultiTexCoord4i)(GLenum,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glMultiTexCoord4s)(GLenum,GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glSampleCoverage)(GLclampf,GLboolean);
GLvoid (APIENTRY * glLoadTransposeMatrixf)(const float[]);
GLvoid (APIENTRY * glLoadTransposeMatrixd)(const double[]);
GLvoid (APIENTRY * glMultTransposeMatrixf)(const float[]);
GLvoid (APIENTRY * glMultTransposeMatrixd)(const double[]);
GLvoid (APIENTRY * glCompressedTexImage3D)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,GLvoid*);
GLvoid (APIENTRY * glCompressedTexImage2D)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,GLvoid*);
GLvoid (APIENTRY * glCompressedTexImage1D)(GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,GLvoid*);
GLvoid (APIENTRY * glCompressedTexSubImage3D)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*);
GLvoid (APIENTRY * glCompressedTexSubImage2D)(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*);
GLvoid (APIENTRY * glCompressedTexSubImage1D)(GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,GLvoid*);
GLvoid (APIENTRY * glGetCompressedTexImage)(GLenum,GLint,GLvoid*);
GLvoid (APIENTRY * glBlendFuncSeparate)(GLenum,GLenum,GLenum,GLenum);
GLvoid (APIENTRY * glFogCoordf)(GLfloat);
GLvoid (APIENTRY * glFogCoordd)(GLdouble);
GLvoid (APIENTRY * glPointParameteri)(GLenum,GLint);
GLvoid (APIENTRY * glPointParameterf)(GLenum,GLfloat);
GLvoid (APIENTRY * glSecondaryColor3b)(GLbyte,GLbyte,GLbyte);
GLvoid (APIENTRY * glSecondaryColor3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glSecondaryColor3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glSecondaryColor3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glSecondaryColor3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glSecondaryColor3ub)(GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glSecondaryColor3ui)(GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glSecondaryColor3us)(GLushort,GLushort,GLushort);
GLvoid (APIENTRY * glWindowPos2d)(GLdouble,GLdouble);
GLvoid (APIENTRY * glWindowPos2f)(GLfloat,GLfloat);
GLvoid (APIENTRY * glWindowPos2i)(GLint,GLint);
GLvoid (APIENTRY * glWindowPos2s)(GLshort,GLshort);
GLvoid (APIENTRY * glWindowPos3d)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glWindowPos3f)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glWindowPos3i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glWindowPos3s)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glFogCoordfv)(GLfloat *);
GLvoid (APIENTRY * glFogCoorddv)(GLdouble *);
GLvoid (APIENTRY * glFogCoordPointer)(GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glMultiDrawArrays)(GLenum,GLint*,GLsizei*,GLsizei);
GLvoid (APIENTRY * glMultiDrawElements)(GLenum,const GLsizei *,GLenum,GLvoid **,GLsizei);
GLvoid (APIENTRY * glPointParameterfv)(GLenum,GLfloat *);
GLvoid (APIENTRY * glPointParameteriv)(GLenum,GLint *);
GLvoid (APIENTRY * glSecondaryColor3bv)(GLbyte *);
GLvoid (APIENTRY * glSecondaryColor3dv)(GLdouble *);
GLvoid (APIENTRY * glSecondaryColor3fv)(GLfloat *);
GLvoid (APIENTRY * glSecondaryColor3iv)(GLint *);
GLvoid (APIENTRY * glSecondaryColor3sv)(GLshort *);
GLvoid (APIENTRY * glSecondaryColor3uiv)(GLuint *);
GLvoid (APIENTRY * glSecondaryColor3ubv)(GLubyte *);
GLvoid (APIENTRY * glSecondaryColor3usv)(GLushort *);
GLvoid (APIENTRY * glSecondaryColorPointer)(GLint,GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glWindowPos2dv)(GLdouble *);
GLvoid (APIENTRY * glWindowPos2fv)(GLfloat *);
GLvoid (APIENTRY * glWindowPos2iv)(GLint *);
GLvoid (APIENTRY * glWindowPos2sv)(GLshort *);
GLvoid (APIENTRY * glWindowPos3dv)(GLdouble *);
GLvoid (APIENTRY * glWindowPos3fv)(GLfloat *);
GLvoid (APIENTRY * glWindowPos3iv)(GLint *);
GLvoid (APIENTRY * glWindowPos3sv)(GLshort *);
GLvoid (APIENTRY * glEndQuery)(GLenum);
GLboolean (APIENTRY * glIsQuery)(GLuint);
GLvoid (APIENTRY * glBeginQuery)(GLenum,GLuint);
GLvoid (APIENTRY * glBindBuffer)(GLenum,GLuint);
GLboolean (APIENTRY * glIsBuffer)(GLuint);
GLvoid (APIENTRY * glGenQueries)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteQueries)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glGenBuffers)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteBuffers)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glGetQueryiv)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGetQueryObjectiv)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetQueryObjectuiv)(GLuint,GLenum,GLuint *);
GLvoid (APIENTRY * glBufferData)(GLenum,GLsizeiptr,GLvoid *,GLenum);
GLvoid (APIENTRY * glBufferSubData)(GLenum,GLintptr,GLsizeiptr,GLvoid *);
GLvoid (APIENTRY * glGetBufferSubData)(GLenum,GLintptr,GLsizeiptr,GLvoid *);
GLvoid (APIENTRY * glGetBufferParameteriv)(GLenum,GLenum,GLint *);
GLvoid * (APIENTRY * glMapBuffer)(GLenum,GLenum);
GLboolean (APIENTRY * glUnmapBuffer)(GLenum);
GLvoid (APIENTRY * glGetBufferPointerv)(GLenum,GLenum,GLvoid **);
GLvoid (APIENTRY * glBlendEquationSeparate)(GLenum,GLenum);
GLvoid (APIENTRY * glStencilOpSeparate)(GLenum,GLenum,GLenum,GLenum);
GLvoid (APIENTRY * glAttachShader)(GLuint,GLuint);
GLvoid (APIENTRY * glCompileShader)(GLuint);
GLvoid (APIENTRY * glDeleteProgram)(GLuint);
GLvoid (APIENTRY * glDeleteShader)(GLuint);
GLvoid (APIENTRY * glDetachShader)(GLuint,GLuint);
GLvoid (APIENTRY * glDisableVertexAttribArray)(GLuint);
GLvoid (APIENTRY * glEnableVertexAttribArray)(GLuint);
GLvoid (APIENTRY * glLinkProgram)(GLuint);
GLvoid (APIENTRY * glUseProgram)(GLuint);
GLvoid (APIENTRY * glValidateProgram)(GLuint);
GLvoid (APIENTRY * glStencilFuncSeparate)(GLenum,GLenum,GLint,GLuint);
GLvoid (APIENTRY * glStencilMaskSeparate)(GLenum,GLuint);
GLuint (APIENTRY * glCreateProgram)(void);
GLuint (APIENTRY * glCreateShader)(GLenum);
GLboolean (APIENTRY * glIsProgram)(GLuint);
GLboolean (APIENTRY * glIsShader)(GLuint);
GLvoid (APIENTRY * glUniform1f)(GLint,GLfloat);
GLvoid (APIENTRY * glUniform1i)(GLint,GLint);
GLvoid (APIENTRY * glUniform2f)(GLint,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform2i)(GLint,GLint,GLint);
GLvoid (APIENTRY * glUniform3f)(GLint,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform3i)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glUniform4f)(GLint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform4i)(GLint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttrib1d)(GLuint,GLdouble);
GLvoid (APIENTRY * glVertexAttrib1f)(GLuint,GLfloat);
GLvoid (APIENTRY * glVertexAttrib1s)(GLuint,GLshort);
GLvoid (APIENTRY * glVertexAttrib2d)(GLuint,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib2f)(GLuint,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib2s)(GLuint,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib3d)(GLuint,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib3f)(GLuint,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib3s)(GLuint,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4d)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib4f)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib4s)(GLuint,GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4Nub)(GLuint,GLubyte,GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glDrawBuffers)(GLsizei,GLenum *);
GLvoid (APIENTRY * glBindAttribLocation)(GLuint,GLuint,GLchar *);
GLvoid (APIENTRY * glGetProgramiv)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetActiveAttrib)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
GLvoid (APIENTRY * glGetActiveUniform)(GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*);
GLvoid (APIENTRY * glGetAttachedShaders)(GLuint,GLsizei,GLsizei *,GLuint *);
GLint (APIENTRY * glGetAttribLocation)(GLuint, GLchar *);
GLvoid (APIENTRY * glGetProgramInfoLog)(GLuint,GLsizei,GLsizei *,GLchar *);
GLvoid (APIENTRY * glGetShaderiv)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetShaderInfoLog)(GLuint,GLsizei,GLsizei *,GLchar *);
GLvoid (APIENTRY * glGetShaderSource)(GLuint,GLsizei,GLsizei *,GLchar *);
GLint (APIENTRY * glGetUniformLocation)(GLuint,const GLchar*);
GLvoid (APIENTRY * glGetUniformfv)(GLuint,GLint,GLfloat *);
GLvoid (APIENTRY * glGetUniformiv)(GLuint,GLint,GLint *);
GLvoid (APIENTRY * glGetVertexAttribdv)(GLuint,GLenum,GLdouble *);
GLvoid (APIENTRY * glGetVertexAttribfv)(GLuint,GLenum,GLfloat *);
GLvoid (APIENTRY * glGetVertexAttribiv)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetVertexAttribPointerv)(GLuint,GLenum,GLvoid **);
GLvoid (APIENTRY * glShaderSource)(GLuint,GLsizei,GLchar**,GLint *);
GLvoid (APIENTRY * glUniform1fv)(GLint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glUniform1iv)(GLint,GLsizei,GLint *);
GLvoid (APIENTRY * glUniform2fv)(GLint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glUniform2iv)(GLint,GLsizei,GLint *);
GLvoid (APIENTRY * glUniform3fv)(GLint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glUniform3iv)(GLint,GLsizei,GLint *);
GLvoid (APIENTRY * glUniform4fv)(GLint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glUniform4iv)(GLint,GLsizei,GLint *);
GLvoid (APIENTRY * glUniformMatrix2fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix3fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix4fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib4Nbv)(GLuint,GLbyte *);
GLvoid (APIENTRY * glVertexAttrib4Niv)(GLuint,GLint *);
GLvoid (APIENTRY * glVertexAttrib4Nsv)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib4Nubv)(GLuint,GLubyte *);
GLvoid (APIENTRY * glVertexAttrib4Nuiv)(GLuint,GLuint *);
GLvoid (APIENTRY * glVertexAttrib4Nusv)(GLuint,GLushort *);
GLvoid (APIENTRY * glVertexAttrib4uiv)(GLuint,GLuint *);
GLvoid (APIENTRY * glVertexAttrib4ubv)(GLuint,GLubyte *);
GLvoid (APIENTRY * glVertexAttrib4usv)(GLuint,GLushort *);
GLvoid (APIENTRY * glVertexAttrib4bv)(GLuint,GLbyte *);
GLvoid (APIENTRY * glVertexAttrib4iv)(GLuint,GLint *);
GLvoid (APIENTRY * glVertexAttrib4dv)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib4fv)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib4sv)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib3dv)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib3fv)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib3sv)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib2dv)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib2fv)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib2sv)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib1dv)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib1fv)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib1sv)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttribPointer)(GLuint,GLint,GLenum,GLboolean,GLsizei,GLvoid *);
GLvoid (APIENTRY * glUniformMatrix2x3fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix3x2fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix2x4fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix4x2fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix3x4fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix4x3fv)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glBeginConditionalRender)(GLuint,GLenum);
GLvoid (APIENTRY * glEndConditionalRender)(void);
GLvoid (APIENTRY * glVertexAttribI1i)(GLuint,GLint);
GLvoid (APIENTRY * glVertexAttribI2i)(GLuint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI3i)(GLuint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI4i)(GLuint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI1ui)(GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI2ui)(GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI3ui)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI4ui)(GLuint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI1iv)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI2iv)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI3iv)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI4iv)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI1uiv)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI2uiv)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI3uiv)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI4uiv)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI4bv)(GLuint,const GLbyte *);
GLvoid (APIENTRY * glVertexAttribI4sv)(GLuint,const GLshort *);
GLvoid (APIENTRY * glVertexAttribI4ubv)(GLuint,const GLubyte *);
GLvoid (APIENTRY * glVertexAttribI4usv)(GLuint,const GLushort *);
GLvoid (APIENTRY * glGetVertexAttribIiv)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetVertexAttribIuiv)(GLuint,GLenum,GLuint *);
GLvoid (APIENTRY * glVertexAttribIPointer)(GLuint,GLint,GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glUniform1ui)(GLint,GLuint);
GLvoid (APIENTRY * glUniform2ui)(GLint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform3ui)(GLint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform4ui)(GLint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform1uiv)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform2uiv)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform3uiv)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform4uiv)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glGetUniformuiv)(GLuint,GLint,GLuint *);
GLvoid (APIENTRY * glGetActiveUniformARB)(GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*);
GLvoid (APIENTRY * glBindFragDataLocation)(GLuint,GLuint,const GLchar *);
GLint (APIENTRY * glGetFragDataLocation)(GLuint,const GLchar *);
GLvoid (APIENTRY * glClampColor)(GLenum,GLenum);
GLvoid (APIENTRY * glDepthRanged)(GLdouble,GLdouble);
GLvoid (APIENTRY * glClearDepthd)(GLdouble);
GLvoid (APIENTRY * glDepthBoundsd)(GLdouble,GLdouble);
GLboolean (APIENTRY * glIsRenderbuffer)(GLuint);
GLvoid (APIENTRY * glBindRenderbuffer)(GLenum,GLuint);
GLvoid (APIENTRY * glRenderbufferStorage)(GLenum,GLenum,GLsizei,GLsizei);
GLvoid (APIENTRY * glGenRenderbuffers)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteRenderbuffers)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glGetRenderbufferParameteriv)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGenFramebuffers)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteFramebuffers)(GLsizei,const GLuint *);
GLboolean (APIENTRY * glIsFramebuffer)(GLuint);
GLvoid (APIENTRY * glBindFramebuffer)(GLenum,GLuint);
GLenum (APIENTRY * glCheckFramebufferStatus)(GLenum);
GLvoid (APIENTRY * glFramebufferTexture1D)(GLenum,GLenum,GLenum,GLuint,GLint);
GLvoid (APIENTRY * glFramebufferTexture2D)(GLenum,GLenum,GLenum,GLuint,GLint);
GLvoid (APIENTRY * glFramebufferTexture3D)(GLenum,GLenum,GLenum,GLuint,GLint,GLint);
GLvoid (APIENTRY * glFramebufferTextureLayer)(GLenum,GLenum,GLuint,GLint,GLint);
GLvoid (APIENTRY * glFramebufferRenderbuffer)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glGetFramebufferAttachmentParameteriv)(GLenum,GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGenerateMipmap)(GLenum);
GLvoid (APIENTRY * glRenderbufferStorageMultisample)(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
GLvoid (APIENTRY * glBlitFramebuffer)(GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum);
GLvoid (APIENTRY * glClearColorIi)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glClearColorIui)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glTexParameterIiv)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glTexParameterIuiv)(GLenum,GLenum,GLuint *);
GLvoid (APIENTRY * glGetTexParameterIiv)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGetTexParameterIuiv)(GLenum,GLenum,GLuint *);
GLvoid (APIENTRY * glColorMaski)(GLuint,GLboolean,GLboolean,GLboolean,GLboolean);
GLvoid (APIENTRY * glGetBooleani_v)(GLenum,GLenum,GLboolean *);
GLvoid (APIENTRY * glGetIntegeri_v)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glEnablei)(GLenum,GLuint);
GLvoid (APIENTRY * glDisablei)(GLenum,GLuint);
GLvoid (APIENTRY * glIsEnabledi)(GLenum,GLuint);
GLvoid (APIENTRY * glGenVertexArrays)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteVertexArrays)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glBindVertexArray)(GLuint);
GLboolean (APIENTRY * glIsVertexArray)(GLuint);
GLvoid (APIENTRY * glTbufferMask3DFX)(GLuint);
GLvoid (APIENTRY * glLoadTransposeMatrixfARB)(const GLfloat[]);
GLvoid (APIENTRY * glLoadTransposeMatrixdARB)(const GLdouble[]);
GLvoid (APIENTRY * glMultTransposeMatrixfARB)(const GLfloat[]);
GLvoid (APIENTRY * glMultTransposeMatrixdARB)(const GLdouble[]);
GLvoid (APIENTRY * glSampleCoverageARB)(GLclampf,GLboolean);
GLvoid (APIENTRY * glPointParameterfARB)(GLenum,GLfloat);
GLvoid (APIENTRY * glPointParameterfvARB)(GLenum,GLfloat *);
GLvoid (APIENTRY * glWindowPos2dARB)(GLdouble,GLdouble);
GLvoid (APIENTRY * glWindowPos2fARB)(GLfloat,GLfloat);
GLvoid (APIENTRY * glWindowPos2iARB)(GLint,GLint);
GLvoid (APIENTRY * glWindowPos2sARB)(GLshort,GLshort);
GLvoid (APIENTRY * glWindowPos3dARB)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glWindowPos3fARB)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glWindowPos3iARB)(GLint,GLint,GLint);
GLvoid (APIENTRY * glWindowPos3sARB)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glWindowPos2dvARB)(const GLdouble *);
GLvoid (APIENTRY * glWindowPos2fvARB)(const GLfloat *);
GLvoid (APIENTRY * glWindowPos2ivARB)(const GLint *);
GLvoid (APIENTRY * glWindowPos2svARB)(const GLshort *);
GLvoid (APIENTRY * glWindowPos3dvARB)(const GLdouble *);
GLvoid (APIENTRY * glWindowPos3fvARB)(const GLfloat *);
GLvoid (APIENTRY * glWindowPos3ivARB)(const GLint *);
GLvoid (APIENTRY * glWindowPos3svARB)(const GLshort *);
GLvoid (APIENTRY * glProgramStringARB)(GLenum,GLenum,GLsizei,const void *);
GLvoid (APIENTRY * glGetProgramivARB)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGetProgramStringARB)(GLenum,GLenum,void *string);
GLvoid (APIENTRY * glGenProgramsARB)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteProgramsARB)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glBindProgramARB)(GLenum,GLuint);
GLboolean (APIENTRY * glIsProgramARB)(GLuint);
GLvoid (APIENTRY * glEnableVertexAttribArrayARB)(GLuint);
GLvoid (APIENTRY * glDisableVertexAttribArrayARB)(GLuint);
GLvoid (APIENTRY * glVertexAttribPointerARB)(GLuint,GLint,GLenum,GLboolean,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glGetVertexAttribPointervARB)(GLuint,GLenum,GLvoid **);
GLvoid (APIENTRY * glProgramEnvParameter4dARB)(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glProgramEnvParameter4fARB)(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glProgramLocalParameter4dARB)(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glProgramLocalParameter4fARB)(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glProgramEnvParameter4dvARB)(GLenum,GLuint,const GLdouble *);
GLvoid (APIENTRY * glProgramEnvParameter4fvARB)(GLenum,GLuint,const GLfloat *);
GLvoid (APIENTRY * glProgramLocalParameter4dvARB)(GLenum,GLuint,const GLdouble *);
GLvoid (APIENTRY * glProgramLocalParameter4fvARB)(GLenum,GLuint,const GLfloat *);
GLvoid (APIENTRY * glGetProgramEnvParameterdvARB)(GLenum,GLuint,GLdouble *);
GLvoid (APIENTRY * glGetProgramEnvParameterfvARB)(GLenum,GLuint,GLfloat *);
GLvoid (APIENTRY * glGetProgramLocalParameterdvARB)(GLenum,GLuint,GLdouble *);
GLvoid (APIENTRY * glGetProgramLocalParameterfvARB)(GLenum,GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib1dARB)(GLuint,GLdouble);
GLvoid (APIENTRY * glVertexAttrib1fARB)(GLuint,GLfloat);
GLvoid (APIENTRY * glVertexAttrib1sARB)(GLuint,GLshort);
GLvoid (APIENTRY * glVertexAttrib2dARB)(GLuint,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib2fARB)(GLuint,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib2sARB)(GLuint,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib3dARB)(GLuint,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib3fARB)(GLuint,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib3sARB)(GLuint,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4dARB)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib4fARB)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib4sARB)(GLuint,GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4NubARB)(GLuint,GLubyte,GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glVertexAttrib4NbvARB)(GLuint,GLbyte *);
GLvoid (APIENTRY * glVertexAttrib4NivARB)(GLuint,GLint *);
GLvoid (APIENTRY * glVertexAttrib4NsvARB)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib4NubvARB)(GLuint,GLubyte *);
GLvoid (APIENTRY * glVertexAttrib4NuivARB)(GLuint,GLuint *);
GLvoid (APIENTRY * glVertexAttrib4NusvARB)(GLuint,GLushort *);
GLvoid (APIENTRY * glVertexAttrib4uivARB)(GLuint,GLuint *);
GLvoid (APIENTRY * glVertexAttrib4ubvARB)(GLuint,GLubyte *);
GLvoid (APIENTRY * glVertexAttrib4usvARB)(GLuint,GLushort *);
GLvoid (APIENTRY * glVertexAttrib4bvARB)(GLuint,GLbyte *);
GLvoid (APIENTRY * glVertexAttrib4ivARB)(GLuint,GLint *);
GLvoid (APIENTRY * glVertexAttrib4dvARB)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib4fvARB)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib4svARB)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib3dvARB)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib3fvARB)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib3svARB)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib2dvARB)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib2fvARB)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib2svARB)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib1dvARB)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib1fvARB)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib1svARB)(GLuint,GLshort *);
GLvoid (APIENTRY * glGetVertexAttribdvARB)(GLuint,GLenum,GLdouble *);
GLvoid (APIENTRY * glGetVertexAttribfvARB)(GLuint,GLenum,GLfloat *);
GLvoid (APIENTRY * glGetVertexAttribivARB)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGenQueriesARB)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteQueriesARB)(GLsizei,const GLuint *);
GLboolean (APIENTRY * glIsQueryARB)(GLuint);
GLvoid (APIENTRY * glBeginQueryARB)(GLuint,GLuint);
GLvoid (APIENTRY * glEndQueryARB)(GLenum);
GLvoid (APIENTRY * glGetQueryivARB)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetQueryObjectivARB)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetQueryObjectuivARB)(GLuint,GLenum,GLuint *);
GLvoid (APIENTRY * glDeleteObjectARB)(GLuint);
GLvoid (APIENTRY * glDetachObjectARB)(GLuint,GLuint);
GLvoid (APIENTRY * glCompileShaderARB)(GLuint);
GLvoid (APIENTRY * glAttachObjectARB)(GLuint,GLuint);
GLvoid (APIENTRY * glLinkProgramARB)(GLuint);
GLvoid (APIENTRY * glUseProgramObjectARB)(GLuint);
GLvoid (APIENTRY * glValidateProgramARB)(GLuint);
GLuint (APIENTRY * glGetHandleARB)(GLenum);
GLuint (APIENTRY * glCreateShaderObjectARB)(GLenum);
GLuint (APIENTRY * glCreateProgramObjectARB)(void);
GLvoid (APIENTRY * glShaderSourceARB)(GLuint,GLsizei,GLchar**,GLint *);
GLvoid (APIENTRY * glUniform1fARB)(GLint,GLfloat);
GLvoid (APIENTRY * glUniform2fARB)(GLint,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform3fARB)(GLint,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform4fARB)(GLint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glUniform1iARB)(GLint,GLint);
GLvoid (APIENTRY * glUniform2iARB)(GLint,GLint,GLint);
GLvoid (APIENTRY * glUniform3iARB)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glUniform4iARB)(GLint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glUniform1fvARB)(GLint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glUniform2fvARB)(GLint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glUniform3fvARB)(GLint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glUniform4fvARB)(GLint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glUniform1ivARB)(GLint,GLsizei,const GLint *);
GLvoid (APIENTRY * glUniform2ivARB)(GLint,GLsizei,const GLint *);
GLvoid (APIENTRY * glUniform3ivARB)(GLint,GLsizei,const GLint *);
GLvoid (APIENTRY * glUniform4ivARB)(GLint,GLsizei,const GLint *);
GLvoid (APIENTRY * glUniformMatrix2fvARB)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix3fvARB)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glUniformMatrix4fvARB)(GLint,GLsizei,GLboolean,GLfloat *);
GLvoid (APIENTRY * glGetObjectParameterivARB)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetObjectParameterfvARB)(GLuint,GLenum,GLfloat *);
GLvoid (APIENTRY * glGetInfoLogARB)(GLuint,GLsizei,GLsizei *,GLchar *);
GLvoid (APIENTRY * glGetShaderSourceARB)(GLuint,GLsizei,GLsizei *,GLchar *);
GLvoid (APIENTRY * glGetUniformfvARB)(GLuint,GLint,GLfloat *);
GLvoid (APIENTRY * glGetUniformivARB)(GLuint,GLint,GLint *);
GLint (APIENTRY * glGetUniformLocationARB)(GLuint,const GLchar*);
GLvoid (APIENTRY * glGetAttachedObjectsARB)(GLuint,GLsizei,GLsizei *,GLuint *);
GLvoid (APIENTRY * glBindAttribLocationARB)(GLuint,GLuint,GLchar *);
GLvoid (APIENTRY * glGetActiveAttribARB)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
GLint (APIENTRY * glGetAttribLocationARB)(GLuint,const GLchar*);
GLvoid (APIENTRY * glClampColorARB)(GLenum,GLenum);
GLvoid (APIENTRY * glDrawBuffersATI)(GLsizei,const GLenum *);
GLvoid (APIENTRY * glBlendColorEXT)(GLclampf,GLclampf,GLclampf,GLclampf);
GLvoid (APIENTRY * glPolygonOffsetEXT)(GLfloat,GLfloat);
GLvoid (APIENTRY * glGenTexturesEXT)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteTexturesEXT)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glBindTextureEXT)(GLenum,GLint);
GLvoid (APIENTRY * glPrioritizeTexturesEXT)(GLsizei,const GLuint *,const GLclampf *);
GLboolean (APIENTRY * glAreTexturesResidentEXT)(GLsizei,const GLuint *,GLboolean *);
GLboolean (APIENTRY * glIsTextureEXT)(GLuint);
GLvoid (APIENTRY * glBlendEquationEXT)(GLenum);
GLvoid (APIENTRY * glPointParameterfEXT)(GLenum,GLfloat);
GLvoid (APIENTRY * glPointParameterfvEXT)(GLenum,GLfloat *);
GLvoid (APIENTRY * glSecondaryColor3bEXT)(GLbyte,GLbyte,GLbyte);
GLvoid (APIENTRY * glSecondaryColor3sEXT)(GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glSecondaryColor3iEXT)(GLint,GLint,GLint);
GLvoid (APIENTRY * glSecondaryColor3fEXT)(GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glSecondaryColor3dEXT)(GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glSecondaryColor3ubEXT)(GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glSecondaryColor3usEXT)(GLushort,GLushort,GLushort);
GLvoid (APIENTRY * glSecondaryColor3uiEXT)(GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glSecondaryColor3bvEXT)(GLbyte *);
GLvoid (APIENTRY * glSecondaryColor3dvEXT)(GLdouble *);
GLvoid (APIENTRY * glSecondaryColor3fvEXT)(GLfloat *);
GLvoid (APIENTRY * glSecondaryColor3ivEXT)(GLint *);
GLvoid (APIENTRY * glSecondaryColor3svEXT)(GLshort *);
GLvoid (APIENTRY * glSecondaryColor3uivEXT)(GLuint *);
GLvoid (APIENTRY * glSecondaryColor3ubvEXT)(GLubyte *);
GLvoid (APIENTRY * glSecondaryColor3usvEXT)(GLushort *);
GLvoid (APIENTRY * glSecondaryColorPointerEXT)(GLint,GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glLockArraysEXT)(GLint,GLint);
GLvoid (APIENTRY * glUnlockArraysEXT)(void);
GLvoid (APIENTRY * glDrawRangeElementsEXT)(GLenum,GLuint,GLuint,GLsizei,GLenum,GLvoid*);
GLvoid (APIENTRY * glMultiDrawArraysEXT)(GLenum,GLint*,GLsizei*,GLsizei);
GLvoid (APIENTRY * glMultiDrawElementsEXT)(GLenum,const GLsizei *,GLenum,GLvoid **,GLsizei);
GLvoid (APIENTRY * glFogCoordfEXT)(GLfloat);
GLvoid (APIENTRY * glFogCoorddEXT)(GLdouble);
GLvoid (APIENTRY * glFogCoordfvEXT)(GLfloat *);
GLvoid (APIENTRY * glFogCoorddvEXT)(GLdouble *);
GLvoid (APIENTRY * glFogCoordPointerEXT)(GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glBlendFuncSeparateEXT)(GLenum,GLenum,GLenum,GLenum);
GLvoid (APIENTRY * glActiveStencilFaceEXT)(GLenum);
GLvoid (APIENTRY * glDepthBoundsEXT)(GLclampd,GLclampd);
GLvoid (APIENTRY * glBlendEquationSeparateEXT)(GLenum,GLenum);
GLboolean (APIENTRY * glIsRenderbufferEXT)(GLuint);
GLvoid (APIENTRY * glBindRenderbufferEXT)(GLenum,GLuint);
GLvoid (APIENTRY * glRenderbufferStorageEXT)(GLenum,GLenum,GLsizei,GLsizei);
GLvoid (APIENTRY * glGenRenderbuffersEXT)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteRenderbuffersEXT)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glGetRenderbufferParameterivEXT)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGenFramebuffersEXT)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteFramebuffersEXT)(GLsizei,const GLuint *);
GLboolean (APIENTRY * glIsFramebufferEXT)(GLuint);
GLvoid (APIENTRY * glBindFramebufferEXT)(GLenum,GLuint);
GLenum (APIENTRY * glCheckFramebufferStatusEXT)(GLenum);
GLvoid (APIENTRY * glFramebufferTexture1DEXT)(GLenum,GLenum,GLenum,GLuint,GLint);
GLvoid (APIENTRY * glFramebufferTexture2DEXT)(GLenum,GLenum,GLenum,GLuint,GLint);
GLvoid (APIENTRY * glFramebufferTexture3DEXT)(GLenum,GLenum,GLenum,GLuint,GLint,GLint);
GLvoid (APIENTRY * glFramebufferRenderbufferEXT)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glGetFramebufferAttachmentParameterivEXT)(GLenum,GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGenerateMipmapEXT)(GLenum);
GLvoid (APIENTRY * glStencilClearTagEXT)(GLsizei,GLuint);
GLvoid (APIENTRY * glBlitFramebufferEXT)(GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum);
GLvoid (APIENTRY * glRenderbufferStorageMultisampleEXT)(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
GLvoid (APIENTRY * glGetQueryObjecti64vEXT)(GLuint,GLenum,GLint64 *);
GLvoid (APIENTRY * glGetQueryObjectui64vEXT)(GLuint,GLenum,GLuint64 *);
GLvoid (APIENTRY * glProgramEnvParameters4fvEXT)(GLenum,GLuint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glProgramLocalParameters4fvEXT)(GLenum,GLuint,GLsizei,const GLfloat *);
GLvoid (APIENTRY * glProgramParameteriEXT)(GLuint,GLenum,GLint);
GLvoid (APIENTRY * glVertexAttribI1iEXT)(GLuint,GLint);
GLvoid (APIENTRY * glVertexAttribI2iEXT)(GLuint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI3iEXT)(GLuint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI4iEXT)(GLuint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glVertexAttribI1uiEXT)(GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI2uiEXT)(GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI3uiEXT)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI4uiEXT)(GLuint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glVertexAttribI1ivEXT)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI2ivEXT)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI3ivEXT)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI4ivEXT)(GLuint,const GLint *);
GLvoid (APIENTRY * glVertexAttribI1uivEXT)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI2uivEXT)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI3uivEXT)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI4uivEXT)(GLuint,const GLuint *);
GLvoid (APIENTRY * glVertexAttribI4bvEXT)(GLuint,const GLbyte *);
GLvoid (APIENTRY * glVertexAttribI4svEXT)(GLuint,const GLshort *);
GLvoid (APIENTRY * glVertexAttribI4ubvEXT)(GLuint,const GLubyte *);
GLvoid (APIENTRY * glVertexAttribI4usvEXT)(GLuint,const GLushort *);
GLvoid (APIENTRY * glGetVertexAttribIivEXT)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetVertexAttribIuivEXT)(GLuint,GLenum,GLuint *);
GLvoid (APIENTRY * glVertexAttribIPointerEXT)(GLuint,GLint,GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glUniform1uiEXT)(GLint,GLuint);
GLvoid (APIENTRY * glUniform2uiEXT)(GLint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform3uiEXT)(GLint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform4uiEXT)(GLint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glUniform1uivEXT)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform2uivEXT)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform3uivEXT)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glUniform4uivEXT)(GLint,GLsizei,const GLuint *);
GLvoid (APIENTRY * glGetUniformuivEXT)(GLuint,GLint,GLuint *);
GLvoid (APIENTRY * glBindFragDataLocationEXT)(GLuint,GLuint,const GLchar *);
GLint (APIENTRY * glGetFragDataLocationEXT)(GLuint,const GLchar *);
GLvoid (APIENTRY * glDrawArraysInstancedEXT)(GLenum,GLint,GLsizei,GLsizei);
GLvoid (APIENTRY * glDrawElementsInstancedEXT)(GLenum,GLsizei,GLenum,const GLvoid *,GLsizei);
GLvoid (APIENTRY * glTexBufferEXT)(GLenum,GLenum,GLenum);
GLvoid (APIENTRY * glClearColorIiEXT)(GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glClearColorIuiEXT)(GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glTexParameterIivEXT)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glTexParameterIuivEXT)(GLenum,GLenum,GLuint *);
GLvoid (APIENTRY * glGetTexParameterIivEXT)(GLenum,GLenum,GLint *);
GLvoid (APIENTRY * glGetTexParameterIuivEXT)(GLenum,GLenum,GLuint *);
GLvoid (APIENTRY * glStringMarkerGREMEDY)(GLsizei,const void *);
GLvoid (APIENTRY * glFrameTerminatorGREMEDY)(void);
GLvoid (APIENTRY * glGenFencesNV)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteFencesNV)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glSetFenceNV)(GLuint,GLenum);
GLboolean (APIENTRY * glTestFenceNV)(GLuint);
GLboolean (APIENTRY * glIsFenceNV)(GLuint);
GLvoid (APIENTRY * glFinishFenceNV)(GLuint);
GLvoid (APIENTRY * glGetFenceivNV)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glLoadProgramNV)(GLenum,GLuint,GLsizei,const GLubyte *);
GLvoid (APIENTRY * glGetProgramivNV)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetProgramStringNV)(GLuint,GLenum,void *string);
GLvoid (APIENTRY * glBindProgramNV)(GLenum,GLuint);
GLboolean (APIENTRY * glIsProgramNV)(GLuint);
GLvoid (APIENTRY * glGenProgramsNV)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteProgramsNV)(GLsizei,const GLuint *);
GLvoid (APIENTRY * glExecuteProgramNV)(GLenum,GLuint,const GLfloat *);
GLvoid (APIENTRY * glVertexAttribPointerNV)(GLuint,GLint,GLenum,GLsizei,const GLvoid *);
GLvoid (APIENTRY * glGetVertexAttribPointervNV)(GLuint,GLenum,GLvoid **);
GLvoid (APIENTRY * glProgramParameter4dNV)(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glProgramParameter4fNV)(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glProgramParameter4dvNV)(GLenum,GLuint,const GLdouble *);
GLvoid (APIENTRY * glProgramParameter4fvNV)(GLenum,GLuint,const GLfloat *);
GLvoid (APIENTRY * glGetProgramParameterdvNV)(GLenum,GLuint,GLenum,GLdouble *);
GLvoid (APIENTRY * glGetProgramParameterfvNV)(GLenum,GLuint,GLenum,GLfloat *);
GLvoid (APIENTRY * glProgramParameters4dvNV)(GLenum,GLuint,GLuint,const GLdouble *);
GLvoid (APIENTRY * glProgramParameters4fvNV)(GLenum,GLuint,GLuint,const GLfloat *);
GLvoid (APIENTRY * glVertexAttrib1dNV)(GLuint,GLdouble);
GLvoid (APIENTRY * glVertexAttrib1fNV)(GLuint,GLfloat);
GLvoid (APIENTRY * glVertexAttrib1sNV)(GLuint,GLshort);
GLvoid (APIENTRY * glVertexAttrib2dNV)(GLuint,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib2fNV)(GLuint,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib2sNV)(GLuint,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib3dNV)(GLuint,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib3fNV)(GLuint,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib3sNV)(GLuint,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4dNV)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glVertexAttrib4fNV)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glVertexAttrib4sNV)(GLuint,GLshort,GLshort,GLshort,GLshort);
GLvoid (APIENTRY * glVertexAttrib4ubNV)(GLuint,GLubyte,GLubyte,GLubyte,GLubyte);
GLvoid (APIENTRY * glVertexAttrib4ubvNV)(GLuint,GLubyte *);
GLvoid (APIENTRY * glVertexAttrib4dvNV)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib4fvNV)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib4svNV)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib3dvNV)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib3fvNV)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib3svNV)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib2dvNV)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib2fvNV)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib2svNV)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttrib1dvNV)(GLuint,GLdouble *);
GLvoid (APIENTRY * glVertexAttrib1fvNV)(GLuint,GLfloat *);
GLvoid (APIENTRY * glVertexAttrib1svNV)(GLuint,GLshort *);
GLvoid (APIENTRY * glVertexAttribs4ubvNV)(GLuint,GLsizei,GLubyte *);
GLvoid (APIENTRY * glVertexAttribs4dvNV)(GLuint,GLsizei,GLdouble *);
GLvoid (APIENTRY * glVertexAttribs4fvNV)(GLuint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glVertexAttribs4svNV)(GLuint,GLsizei,GLshort *);
GLvoid (APIENTRY * glVertexAttribs3dvNV)(GLuint,GLsizei,GLdouble *);
GLvoid (APIENTRY * glVertexAttribs3fvNV)(GLuint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glVertexAttribs3svNV)(GLuint,GLsizei,GLshort *);
GLvoid (APIENTRY * glVertexAttribs2dvNV)(GLuint,GLsizei,GLdouble *);
GLvoid (APIENTRY * glVertexAttribs2fvNV)(GLuint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glVertexAttribs2svNV)(GLuint,GLsizei,GLshort *);
GLvoid (APIENTRY * glVertexAttribs1dvNV)(GLuint,GLsizei,GLdouble *);
GLvoid (APIENTRY * glVertexAttribs1fvNV)(GLuint,GLsizei,GLfloat *);
GLvoid (APIENTRY * glVertexAttribs1svNV)(GLuint,GLsizei,GLshort *);
GLvoid (APIENTRY * glGetVertexAttribdvNV)(GLuint,GLenum,GLdouble *);
GLvoid (APIENTRY * glGetVertexAttribfvNV)(GLuint,GLenum,GLfloat *);
GLvoid (APIENTRY * glGetVertexAttribivNV)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glTrackMatrixNV)(GLenum,GLuint,GLenum,GLenum);
GLvoid (APIENTRY * glGetTrackMatrixivNV)(GLenum,GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glRequestResidentProgramsNV)(GLsizei, GLuint *);
GLboolean (APIENTRY * glAreProgramsResidentNV)(GLsizei, const GLuint *, GLboolean *);
GLvoid (APIENTRY * glGenOcclusionQueriesNV)(GLsizei,GLuint *);
GLvoid (APIENTRY * glDeleteOcclusionQueriesNV)(GLsizei,const GLuint *);
GLboolean (APIENTRY * glIsOcclusionQueryNV)(GLuint);
GLvoid (APIENTRY * glBeginOcclusionQueryNV)(GLuint);
GLvoid (APIENTRY * glEndOcclusionQueryNV)(void);
GLvoid (APIENTRY * glGetOcclusionQueryivNV)(GLuint,GLenum,GLint *);
GLvoid (APIENTRY * glGetOcclusionQueryuivNV)(GLuint,GLenum,GLuint *);
GLvoid (APIENTRY * glPointParameteriNV)(GLenum,GLint);
GLvoid (APIENTRY * glPointParameterivNV)(GLenum,const GLint *);
GLvoid (APIENTRY * glProgramNamedParameter4dNV)(GLuint,GLsizei,const GLubyte *,GLdouble,GLdouble,GLdouble,GLdouble);
GLvoid (APIENTRY * glProgramNamedParameter4fNV)(GLuint,GLsizei,const GLubyte *,GLfloat,GLfloat,GLfloat,GLfloat);
GLvoid (APIENTRY * glProgramNamedParameter4dvNV)(GLuint,GLsizei,const GLubyte *,const GLdouble *);
GLvoid (APIENTRY * glProgramNamedParameter4fvNV)(GLuint,GLsizei,const GLubyte *,const GLfloat *);
GLvoid (APIENTRY * glGetProgramNamedParameterdvNV)(GLuint,GLsizei,const GLubyte *,GLdouble *);
GLvoid (APIENTRY * glGetProgramNamedParameterfvNV)(GLuint,GLsizei,const GLubyte *,GLfloat *);
GLvoid (APIENTRY * glPrimitiveRestartNV)(void);
GLvoid (APIENTRY * glPrimitiveRestartIndexNV)(GLuint);
GLvoid (APIENTRY * glProgramLocalParameterI4iNV)(GLenum,GLuint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glProgramLocalParameterI4uiNV)(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glProgramEnvParameterI4iNV)(GLenum,GLuint,GLint,GLint,GLint,GLint);
GLvoid (APIENTRY * glProgramEnvParameterI4uiNV)(GLenum,GLuint,GLuint,GLuint,GLuint,GLuint);
GLvoid (APIENTRY * glProgramLocalParameterI4ivNV)(GLenum,GLuint,const GLint *);
GLvoid (APIENTRY * glProgramLocalParameterI4uivNV)(GLenum,GLuint,const GLuint *);
GLvoid (APIENTRY * glProgramEnvParameterI4ivNV)(GLenum,GLuint,const GLint *);
GLvoid (APIENTRY * glProgramEnvParameterI4uivNV)(GLenum,GLuint,const GLuint *);
GLvoid (APIENTRY * glProgramLocalParametersI4ivNV)(GLenum,GLuint,GLuint,const GLint *);
GLvoid (APIENTRY * glProgramLocalParametersI4uivNV)(GLenum,GLuint,GLuint,const GLuint *);
GLvoid (APIENTRY * glProgramEnvParametersI4ivNV)(GLenum,GLuint,GLuint,const GLint *);
GLvoid (APIENTRY * glProgramEnvParametersI4uivNV)(GLenum,GLuint,GLuint,const GLuint *);
GLvoid (APIENTRY * glGetProgramLocalParameterIivNV)(GLenum,GLuint,GLint *);
GLvoid (APIENTRY * glGetProgramLocalParameterIuivNV)(GLenum,GLuint,GLuint *);
GLvoid (APIENTRY * glGetProgramEnvParameterIivNV)(GLenum,GLuint,GLint *);
GLvoid (APIENTRY * glGetProgramEnvParameterIuivNV)(GLenum,GLuint,GLuint *);
GLvoid (APIENTRY * glProgramVertexLimitNV)(GLenum,GLint);
GLvoid (APIENTRY * glFramebufferTextureEXT)(GLenum,GLenum,GLuint,GLuint);
GLvoid (APIENTRY * glFramebufferTextureLayerEXT)(GLenum,GLenum,GLuint,GLint,GLint);
GLvoid (APIENTRY * glFramebufferTextureFaceEXT)(GLenum,GLenum,GLuint,GLint,GLenum);
GLvoid (APIENTRY * glDepthRangedNV)(GLdouble,GLdouble);
GLvoid (APIENTRY * glClearDepthdNV)(GLdouble);
GLvoid (APIENTRY * glDepthBoundsdNV)(GLdouble,GLdouble);
GLvoid (APIENTRY * glRenderbufferStorageMultisampleCoverageNV)(GLenum,GLsizei,GLsizei,GLenum,GLsizei,GLsizei);
    };
    #endif
